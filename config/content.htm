<h1>About!</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>影片</h1>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/6HTL50MJ4DY" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/GI-kMj1Kogo" width="560"></iframe></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Workout</h1>
<p>本電腦輔助機械設計實習課程, 除了教導學生使用電腦輔助設計套件 (<span> </span><a href="https://www.solidworks.com/">Solidworks</a>,<span> </span><a href="https://www.plm.automation.siemens.com/global/en/products/nx/">NX</a>) 中, 各種參數式 3D 零組件設計與繪圖功能外, 也導入開源的<span> </span><a href="http://solvespace.com/">Solvespace</a>,<span> </span><a href="https://www.freecadweb.org/">FreeCAD</a>,<span> </span><a href="http://www.coppeliarobotics.com/">V-rep</a><span> </span>與<span> </span><a href="https://cyberbotics.com/">Webots</a>, 讓學員了解這些中高端套件的底層所包含的各種數學原理與程式技術. 並且透過全雲端<span> </span><a href="https://www.onshape.com/">Onshape</a><span> </span>的協同設計, 引領學員一窺未來全球協同產品開發流程可能呈現的架構與風貌.</p>
<p>電腦輔助設計實習課程承接計算機程式與網際內容管理課程, 並與協同產品設計實習採用相同工具與理念, 希望所有學員能夠在電腦軟硬體與網路系統的充分整合應用下, 有能力透過程式方法與網際內容管理的架構, 執行創新產品開發.</p>
<h2>week4&amp;week5</h2>
<p>學習編譯Solvespace</p>
<p>先將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe</p>
<p>git version 查驗 git 版本</p>
<p>git 2.13 版本以上, 可以使用下列 git clone <span>--recurse-submodules 取得所有子模組資料</span></p>
<p>git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace</p>
<p>edit Y:\tmp\solvespace\extlib\angle\CMakeLists.txt comment out line 713 and 714</p>
<p>#list(APPEND ANGLE_DEFINITIONS<br/>#"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")<br/>endif()</p>
<p>需要手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中:</p>
<p>cd solvespace</p>
<p>cd extlib</p>
<p>cd libpng</p>
<p>mkdir build</p>
<p>cd build</p>
<p>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/>mingw32-make</p>
<p>rename libpng.dll.a to libpng_static.a and copy to Y:\msys64\mingw64\lib</p>
<p>接著回到 solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 執行:</p>
<p><span>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</span><br/><span>mingw32-make</span></p>
<p><span>練習影片:</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/GI-kMj1Kogo" width="560"></iframe></span></p>
<p><span>練習操作Solvespace</span></p>
<p><span>練習影片:</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/6HTL50MJ4DY" width="560"></iframe></span></p>
<h2>week6</h2>
<h4>雙輪車控制模擬</h4>
<p>利用 <a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing">2019Fall可攜套件.7z</a><span> 學習如何完成 <a href="https://github.com/solvespace/solvespace">https://github.com/solvespace/solvespace</a> 原始碼的編譯, 並透過 <a href="http://solvespace.com/">http://solvespace.com</a> 學習如何建立 <a href="https://github.com/mdecourse/mocad/files/3583773/web_vrep2.zip">web_rep2.zip</a> 中所需的行走車.</span></p>
<p><span>其中必須將所建立的零組件轉入 <a href="https://drive.google.com/file/d/1cZFSsLEoGOBYojzKzFEf4YH2l--pbS-9/view?usp=sharing">V-rep 3.6.1 rev 4.7z</a><span> 進行運動組立後, 以 Lua 或 Python 進行控制.</span></span></p>
<p><span><span>網際 V-rep 模型控制:<span> </span><a href="https://github.com/mdecourse/mocad/files/3583773/web_vrep2.zip">web_vrep2.zip</a> (<a href="http://mde.tw/cad2019/downloads/web_vrep2.zip">local</a>)</span></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/fBs2Iogk_J0" width="560"></iframe></span></p>
<p></p>
<p></p>
<h2>week7</h2>
<h1>翻譯</h1>
<p>第4章-三維建模</p>
<p>本章討論了NX 12中三維（3D）建模的基礎。我們將討論</p>
<p>什麼是特徵，什麼是不同類型的特徵，什麼是原語以及如何</p>
<p>使用原語的功能在NX 12中建模。這將使NX 12在建模部分中搶先一步並了解3D建模中使用表單特徵的知識。一旦這些功能</p>
<p>在介紹之後，我們將重點介紹功能操作，這些功能可以應用於</p>
<p>實體的曲面和邊緣或您創建的特徵。這些包括錐度，邊緣融合，面</p>
<p>混合，倒角，修剪等。在解釋了功能操作之後，本章將逐步引導您</p>
<p>一些例子。</p>
<p>在NX 12中，特徵是具有已定義的父母的一類對象。功能是有關聯的，由一個或多個父母定義，其創建和修改的順序保留在模型，從而通過“歷史記錄”捕獲它。父母可以是幾何對像或數字對象變量。特徵包括圖元，表面和/或實體以及某些線框對象（例如作為曲線以及相關的修剪和橋樑曲線）。例如，一些常見功能包括塊，圓柱體，圓錐體，球體，擠壓體和旋轉體。</p>
<p>常用功能可以分類如下：</p>
<p>- Body：一類包含實體和圖紙的對象</p>
<p>- Solid Body：包含一定體積的面和邊緣的集合</p>
<p>- Sheet Body：一個或多個不包含體積的面的集合</p>
<p>- Face：主體外部的區域，被邊緣包圍</p>
<p>4.1功能類型</p>
<p>表單特徵有六種類型：基元，參考特徵，掃描特徵，刪除功能，提取功能和用戶定義的功能。 與以前的版本相似，NX 12存儲插入菜單選項下的所有表單功能。 表單功能也可以在表單功能工具欄。</p>
<p>點擊菜單上的插入</p>
<p>如您所見，右側圖中標記的菜單包含Form的指令。表單功能圖標在主頁工具欄中，如下所示。 您可以選擇您經常使用的圖標。</p>
<p>➢ 點擊Home Toolbar中的下拉箭頭</p>
<p>➢ 選取Feature Group</p>
<p>4.1.1基元</p>
<p>它們使您可以以通用建築形狀的形式創建實體。 基元包括：</p>
<ul>
<li>塊</li>
<li>圓筒</li>
<li>錐</li>
<li>球體</li>
</ul>
<p>基元是主要實體。 因此，我們將從對基元的簡短描述開始，然後再對各種對象進行建模。</p>
<p>4.1.2參考功能</p>
<p>這些功能使您可以創建參考點，參考軸，參考平面或參考坐標，這些參考點可用於建造其他特徵。</p>
<p>➢點選菜單→插入→基準點/點或單擊功能欄中特徵組裡的基準平面以查看不同的參考特徵選項：基準平面，基準軸，基準CSYS和點。</p>
<p>4.1.3掃描功能</p>
<p>這些功能使您可以通過拉伸或旋轉截面來創建實體。 掃描功能包括：</p>
<ul>
<li>擠壓成型</li>
<li>旋轉成型</li>
<li>沿著引導掃描</li>
<li>管</li>
<li>樣式掃描</li>
</ul>
<p>要選擇掃描功能，您可以執行以下操作：</p>
<p>➢單擊插入→設計拉伸和旋轉特徵，或單擊功能欄中特徵組的拉伸。</p>
<p>或者.</p>
<p>➢單擊插入→掃描或在功能區欄中功能組的單擊更多，以找到所有可用選項，包括掃描</p>
<p>4.1.4刪除功能</p>
<p>刪除功能使您可以通過從其他零件移除實體零件來創建實體。</p>
<p>➢單擊插入→設計特徵</p>
<p>刪除功能包括：</p>
<ul>
<li>孔</li>
<li>口袋</li>
<li>插槽</li>
<li>凹槽</li>
</ul>
<p>4.1.5提取功能</p>
<p>這些功能使您可以通過提取曲線，面和區域來創建實體。 這些功能在“關聯複印”和“偏移/縮放”菜單下有很大的間距。 提取功能包括：</p>
<ul>
<li>提取物</li>
<li>薄殼</li>
<li>加厚板</li>
<li>水平面</li>
<li>曲線表</li>
</ul>
<p>➢單擊插入→關聯副本→提取提取選項，或單擊更多功能區欄中的要素組以查找“提取幾何體”</p>
<p>➢單擊插入→實體/殼和厚板助手的偏移/比例或在功能區欄的特徵組中單擊更多以找到偏移/比例選項</p>
<p>➢單擊插入→曲線的邊界平面和圖紙的表面</p>
<p>4.1.6用戶定義的功能</p>
<p>這些功能使您可以創建自己的表單功能，以自動化常用的設計元素。 您可以使用用戶定義的功能來擴展內置表單功能的範圍和功能。</p>
<p>➢單擊插入→設計特徵→用戶定義</p>
<p> 4.2基本原則</p>
<p>基本原則是基礎要素，可以從中創建許多其他要素。 基本圖元是塊，圓柱體，圓錐體和球體。 基元是非關聯的，這意味著它們不與創建它們的幾何圖形有關聯。</p>
<p>請注意，通常使用掃描功能來創建基元，而不是此處提到的命令。</p>
<p>4.2.1建模塊</p>
<p>➢創建一個新文件並將其命名為</p>
<p>Arborpress_plate.prt</p>
<p>➢選擇“插入”→“設計特徵”→“塊”，或單擊“表單特徵”工具欄中的“塊”圖標出現“阻止”窗口。 定義塊主要有三件事，即塊的類型，原點和尺寸。 要存取類型，請滾動“類型”下的下拉菜單。 有三種創建塊基元的方法：</p>
<ul>
<li>原點和邊長</li>
<li>高度和兩點</li>
<li>兩個對角點</li>
</ul>
<p>➢確保選擇了原點和邊長方法</p>
<p>現在，我們將使用“點構造器”選擇原點：➢單擊“原點”下方的“點對話框”圖標</p>
<p>“點構造器”對話框將打開。 XC，YC，ZC點的默認值應為0。</p>
<p>➢點擊確定</p>
<p>阻止窗口將再次出現。</p>
<p>➢在窗口中輸入以下尺寸</p>
<p>長度（XC）= 65英寸</p>
<p>寬度（YC）= 85英寸</p>
<p>高度（ZC）= 20英寸</p>
<p>➢點擊確定</p>
<p>如果您在屏幕上看不到任何內容，</p>
<p>➢右鍵單擊並選擇FIT。 您也可以按&lt;Ctrl&gt; + F</p>
<p>➢右鍵單擊屏幕，然後單擊“東方視圖”→“ Trimetric”</p>
<p> 你應該能看到完整的實體模型，儲存並關閉零件檔。</p>
<p>第一次翻原文書，雖然說沒有很複雜，但有很多NX內的工具名稱需要另外去找意思才有辦法知道名稱，這也花了我一點時間去對應它的中文，從中也讀到了一些未曾在NX中使用過的功能。</p>
<p>4.2.2對軸建模</p>
<p>讓我們繼續進行建模，該軸使用基本體將兩個圓柱體和一個圓錐體連接在一起。</p>
<p>➢創建一個新文件並將其另存為Impeller_shaft.prt</p>
<p>➢選擇插入→設計特徵→圓柱體，或在功能區欄中的特徵組中單擊更多以在設計特徵部分中找到圓柱體與“塊”相似，創建圓柱體需要定義三件事：“類型”，“軸和原點”以及“尺寸”。</p>
<p>圓柱可以通過兩種類型定義，可以通過滾動“類型”下的下拉菜單來獲得</p>
<ul>
<li>軸，直徑和高度</li>
<li>弧度和高度</li>
</ul>
<p>➢選擇軸，直徑和高度</p>
<p>➢單擊指定向量旁邊的向量構造器圖標，然後選擇ZC軸圖標</p>
<p>➢單擊“指定點”旁邊的“點對話框”圖標以設置圓柱體的原點</p>
<p>➢將所有XC，YC和ZC坐標設置為0</p>
<p>您可以看到所選點是WCS的原點</p>
<p>➢在窗口的下一個對話框中，鍵入以下值</p>
<p>直徑= 4英寸</p>
<p>高度= 18英寸</p>
<p>➢點擊確定</p>
<p>➢右鍵單擊屏幕，選擇“定向視圖”→“等軸測”</p>
<p>圓柱體將如右圖所示。現在，我們將在圓柱體的一端創建一個圓錐體。</p>
<p>➢選擇插入→設計特徵→圓錐體，或在功能區欄中的特徵組中單擊更多以在設計特徵部分中找到圓錐體</p>
<p>與“塊”和“圓柱體”類似，有多種創建圓錐體的方法，可以通過在“類型”框中滾動下拉菜單來查看。</p>
<ul>
<li>直徑和高度</li>
<li>直徑和半角</li>
<li>底座直徑，高度和半角</li>
<li>頂部直徑，高度和半角</li>
<li>兩個同軸弧</li>
</ul>
<p>➢選擇直徑和高度</p>
<p>➢單擊指定向量旁邊的向量構造器圖標</p>
<p>➢選擇ZC軸圖標，使矢量指向Z軸正方向</p>
<p>➢單擊“指定點”旁邊的“點構造器”圖標以設置圓柱體的原點。</p>
<p>點構造器窗口將出現。</p>
<p>➢在對話框中選擇“弧/橢圓/球中心”圖標，然後單擊圓柱的頂部圓形邊緣</p>
<p>或者</p>
<p>➢對於輸出坐標，輸入以下值：</p>
<p>XC = 0</p>
<p>YC = 0</p>
<p>ZC = 18</p>
<p>➢點擊確定</p>
<p>➢在圓錐窗口中，輸入以下值：</p>
<p>底座直徑= 4英寸</p>
<p>頂部直徑= 6英寸</p>
<p>高度= 10英寸</p>
<p>➢在布爾運算窗口中，選擇Unite並選擇圓柱體</p>
<p>➢點擊確定</p>
<p>現在，圓錐將出現在圓柱體的頂部。軸如右圖所示。</p>
<p>現在，我們將在圓錐頂部再創建一個圓柱。</p>
<p>➢重複與之前相同的步驟來創建另一個圓柱體。向量應指向ZC正方向。在“點構造器”窗口上，再次單擊“中心”圖標，然後將其構造在圓錐體底部的中心點。圓柱體的直徑應為6英寸，高度應為20英寸。將氣缸與舊結構結合在一起。</p>
<p>整個軸的外觀如下圖所示。不要忘記保存模型。</p>
<p>4.3參考功能</p>
<p>4.3.1基準平面</p>
<p>基準平面是參考特徵，可以用做構造其他特徵時的基礎特徵。它們有助於在沒有平面的圓柱體，圓錐體，球體和旋轉實體上創建特徵，並且還可以幫助創建非角度的特徵垂直於目標實體的面。我們將遵循一些簡單的步驟來練習參考功能。首先，我們將創建一個從基準面偏移的基準平面，如上圖所示。</p>
<p>➢打開模型Arborpress_plate.prt</p>
<p>➢選擇插入→基準/點→基準平面</p>
<p>單擊“特徵工具欄”中的圖標，如下圖所示，也可以打開“基準平面”對話框。</p>
<p>基準平面窗口允許您選擇方法。但是，如果保留“推斷”選項（也是“默認”選項），則NX 12足夠聰明，可以根據您選擇的實體來判斷方法。</p>
<p>➢單擊塊的頂部，使其突出顯示</p>
<p>向量顯示將在其上創建基準平面的正偏移方向。如果選擇了底面，則向量將指向下方，遠離實體。 ➢在對話框中將“偏移距離”值設置為15英寸，然後單擊“確定”。</p>
<p>➢如果看不到完整的模型和平面，請右鍵單擊並選擇FIT</p>
<p>4.3.2基準軸</p>
<p>在這一部分中，您將創建一個基準軸。 基準軸是一個參考特徵，可用於創建基準平面，旋轉特徵，拉伸實體等。它可以相對於另一個對象創建，也可以作為固定軸創建（即，不參考且不受其他幾何約束） 對象）。</p>
<p>➢選擇插入→基準/點→基準軸</p>
<p> 單擊“特徵”工具欄右圖所示的圖標，也可以打開“基準軸”對話框。</p>
<p>下一個窗口允許您選擇選擇軸的方法。請注意，NX 12可以根據您選擇的實體來判斷使用哪種方法。</p>
<p>有多種製作基準軸的方法。它們包括點和方向，兩個點，兩個平面等。</p>
<p>➢如右圖所示，選擇塊上的兩個點</p>
<p>➢點擊確定</p>
<p>如圖所示，基準軸將為對角線。</p>
<p>4.4掃描功能</p>
<p>這裡以一個實際示例介紹了兩個重要的後掠特徵（拉伸和旋轉），這是我們在上一章中開始的葉輪下殼體的延續。</p>
<p>➢打開Impeller_lower_casing.prt</p>
<p>在上一節中，我們完成了該零件的二維草圖繪製，其外觀應類似於下圖。</p>
<p>➢單擊插入→設計特徵→旋轉</p>
<p>或者</p>
<p>➢單擊特徵組中的“旋轉”按鈕</p>
<p>確保選擇濾鏡設置為“單曲線”，如下圖所示。</p>
<p>➢單擊10條曲線中的每條，如下圖所示</p>
<p>➢在``軸''對話框的``指定向量''選項中，選擇正XC方向</p>
<p>➢在“指定點”選項中，輸入坐標（0，0，0），以便曲線相對於原點繞XC軸旋轉</p>
<p>➢保持起始角度為0並輸入180作為終止角度的值</p>
<p>➢點擊確定</p>
<p>實體顯示在右側。 現在，我們將創建邊緣。</p>
<p>➢單擊插入→設計特徵→拉伸</p>
<p>或者</p>
<p>➢單擊特徵中的拉伸按鈕</p>
<p>組</p>
<p>➢如下圖所示選擇套管的外部曲線（再次確保選擇過濾器設置為“單曲線”）。</p>
<p>注意：如果無法選擇合適的線，請單擊鼠標左鍵並按住不放，然後會彈出一個對話框，如圖所示，該對話框將為您提供選擇哪條曲線的選項。</p>
<p>➢在負Z方向上將其拉伸0.5英寸</p>
<p>最終固體將如下所示。</p>
<p>現在，我們將使用“鏡像”選項在另一側創建一條邊。</p>
<p>➢選擇編輯→轉換</p>
<p>➢如圖所示選擇實邊。 為此，您必須將對話框中的“過濾器”更改為“實體”</p>
<p>➢點擊確定</p>
<p>➢選擇通過平面鏡像</p>
<p>➢選擇中心線，如下圖所示</p>
<p>➢點擊確定</p>
<p>➢選擇複製</p>
<p>➢點擊取消</p>
<p>邊緣將鏡像到另一側，如下所示。</p>
<p>如圖所示，我們現在將在殼體的較小開口處創建一個輪緣。</p>
<p>➢單擊插入→設計特徵→旋轉</p>
<p>再次確保選擇過濾器設置為單曲線。 默認的“推斷曲線”選項將選擇整個草圖，而不是單個曲線。</p>
<p>➢像套管一樣，在相對於原點的正XC方向上旋轉此矩形。 終止角度應為180</p>
<p>這將形成邊緣，如下所示。</p>
<p> 下殼體完成。 不要忘記保存模型。</p>
<p>4.5刪除功能</p>
<p>刪除功能允許您刪除現有對象的一部分，以創建具有設計中其他功能的對象，如下所示。</p>
<p>4.5.1一般孔</p>
<p>使用此選項可以在實體中創建簡單，沉頭孔，沉頭孔和錐形孔。</p>
<p> ➢打開文件Arborpress_plate.prt</p>
<p>➢選擇插入→設計特徵→孔</p>
<p>或者</p>
<p>➢單擊功能工具欄中的圖標，如圖所示</p>
<p>孔窗口將打開。 在製作孔之前，需要進行多種選擇。 首先，您需要選擇孔的類型。</p>
<p>➢選擇默認的通用孔</p>
<p>接下來，您需要定義需要打孔的點。</p>
<p>➢單擊“位置”對話框中的“草圖”圖標，然後選擇板的頂面作為“草圖平面”</p>
<p>➢點擊確定</p>
<p>這將帶您進入草圖平面。</p>
<p> ➢單擊“點對話框”圖標並指定下表中給出的所有點</p>
<table width="240">
<tbody>
<tr>
<td width="80">
<p><strong>X </strong></p>
</td>
<td width="80">
<p><strong>Y </strong></p>
</td>
<td width="80">
<p><strong>Z </strong></p>
</td>
</tr>
<tr>
<td width="80">
<p>11.25</p>
</td>
<td width="80">
<p>10.00</p>
</td>
<td width="80">
<p>0.00</p>
</td>
</tr>
<tr>
<td width="80">
<p>32.50</p>
</td>
<td width="80">
<p>23.50</p>
</td>
<td width="80">
<p>0.00</p>
</td>
</tr>
<tr>
<td width="80">
<p>53.75</p>
</td>
<td width="80">
<p>10.00</p>
</td>
<td width="80">
<p>0.00</p>
</td>
</tr>
<tr>
<td width="80">
<p>11.25</p>
</td>
<td width="80">
<p>75.00</p>
</td>
<td width="80">
<p>0.00</p>
</td>
</tr>
<tr>
<td width="80">
<p>32.50</p>
</td>
<td width="80">
<p>61.50</p>
</td>
<td width="80">
<p>0.00</p>
</td>
</tr>
<tr>
<td width="80">
<p>53.75</p>
</td>
<td width="80">
<p>75.00</p>
</td>
<td width="80">
<p>0.00</p>
</td>
</tr>
</tbody>
</table>
<p>➢輸入每個點的坐標後，單擊確定。</p>
<p>➢輸入所有點後，單擊“關閉”。</p>
<p>➢單擊窗口左上角的完成標誌</p>
<p>這將使您退出草圖模式，並返回到圖形屏幕上的原始“孔”窗口。</p>
<p>➢在表格對話框中，選擇簡單孔的默認選項</p>
<p>➢在尺寸窗口中輸入以下值</p>
<p>直徑= 8英寸</p>
<p>深度= 25英寸</p>
<p>頂角= 118度</p>
<p>➢在布爾對話框中選擇減，然後單擊確定。</p>
<p>確保保存模型。</p>
<p>4.5.2口袋</p>
<p>這會在現有的身體中創建一個空腔。</p>
<p>➢使用默認值創建一個塊</p>
<p>➢選擇插入→設計特徵→口袋</p>
<p>➢選擇矩形</p>
<p>➢選擇要在其上創建口袋的面</p>
<p>➢選擇一個垂直面作為尺寸標註的參考</p>
<p>➢如圖所示輸入口袋的尺寸</p>
<p>➢根據需要更改位置</p>
<p>4.5.3插槽</p>
<p>使用此選項，您可以創建直通道形狀的穿過或進入實體的通道。 對當前目標實體執行自動減法。 它可以是矩形，T形槽，U形槽，球形端或燕尾形。 右側顯示了一個示例。</p>
<p>4.5.4凹槽</p>
<p>使用此選項，您可以在實體上創建凹槽，就像在旋轉零件上向內（從外部放置面）或向外（從內部放置面）移動成形工具一樣，就像車削操作一樣。 右側顯示了一個示例。</p>
<p>注意：在實踐中不經常使用Pocket，Slot和Groove功能。使用這些功能創建的所有模型都可以使用2D草圖和拉伸/旋轉建模。</p>
<p>4.6功能操作</p>
<p>在基本的“形狀特徵”上執行特徵操作，以平滑拐角，創建錐度，製作螺紋，實例化以及從其他實體中減去某些實體。下面介紹了一些功能操作。</p>
<p>4.6.1邊緣融合</p>
<p>邊緣混合是與混合面相切的半徑混合。此功能通過舍入選定的邊來修改實體。該命令位於插入→詳細特徵→邊緣融合下。您也可以在功能組中單擊其圖標。您需要選擇要混合的邊並定義混合半徑，如下所示。</p>
<p>  與Edge Blend相似，您也可以通過選擇兩個相鄰的面來進行Face Blend。</p>
<p>4.6.2倒角</p>
<p>倒角功能的操作與混合功能非常相似，通過相對於邊緣是外部倒角還是內部倒角添加或減去材質。該命令可在插入→詳細特徵→倒角下找到。您也可以在功能組中單擊其圖標。您需要選擇要倒角的邊並定義倒角的距離，如下所示。</p>
<p> 4.6.3線程</p>
<p>只能在圓柱面上創建螺紋。 螺紋功能使您可以在圓柱孔（例如孔，凸台或圓柱）上創建右手或左手，外部或內部的符號或詳細螺紋（在實體上）。 它還允許您選擇創建螺紋的方法，例如切割，軋製，銑削或磨削。 您可以創建不同類型的線程，例如公制，統一，acme等。 要使用此命令，請轉到插入→設計特徵→線程。 下面顯示了一個詳細線程的示例。</p>
<p>對於螺紋孔，建議使用螺紋孔命令代替螺紋命令：插入→設計特徵→孔</p>
<p>4.6.4修剪主體</p>
<p>可以使用“修剪實體”功能用圖紙實體或基準平面修剪實體，同時保留參數和關聯性。 要使用此命令，請轉到插入→修剪</p>
<p>→修剪主體，或在功能組中單擊其圖標。 右側顯示了一個示例。</p>
<p>4.6.5分體</p>
<p>可以通過平面或片狀實體將實體分為兩個實體。 要使用此命令，請轉到“插入”→“修剪”→“分割主體”，或在“功能組”中單擊其圖標。 右側顯示了一個示例。</p>
<p> 4.6.6鏡子</p>
<p>鏡像是一種關聯副本，其中通過相對於平面鏡像實體來創建實體。 要使用此命令，請轉至插入→關聯副本→鏡像特徵，或在特徵組中單擊其圖標。 一個例子如下所示。</p>
<p>4.6.7模式</p>
<p>可以將設計特徵或明細特徵以數組的形式製成從屬副本。 它可以是線性，圓形，多邊形，螺旋形等。當您具有類似功能時，此特別有用的功能可以節省大量時間和建模。 例如齒輪的螺紋或安裝板上的孔等。可以在“插入”→“關聯副本”→“圖案特徵”下找到此命令。 您也可以在功能組中單擊其圖標。 一個例子如下所示。</p>
<p>4.6.8布爾運算</p>
<p>布爾運算共有三種類型：聯合，相減和相交。當兩個或多個實體在零件文件中共享相同的模型空間時，可以使用這些選項。要使用此命令，請轉至插入→合併，或在功能組中單擊其圖標。考慮給定的兩個實體：一個塊和一個圓柱體彼此相鄰，如右圖所示。</p>
<p>4.6.8.1團結</p>
<p>unite命令將工具主體與目標主體添加在一起。對於上面的示例，如果使用Unite選項，輸出將如下所示。</p>
<p>4.6.8.2減</p>
<p>使用減法選項時，將從目標實體中減去工具實體。如果將塊用作目標並將圓柱體用作工具，則將輸出以下內容。</p>
<p>4.6.8.3相交</p>
<p>此命令保留目標實體和工具實體共有的體積。輸出如下所示。</p>
<p>4.6.9移動</p>
<p>如果要相對於固定實體移動對象，</p>
<p>➢單擊編輯→移動對象</p>
<p>您可以從“示意”下拉菜單中選擇運動類型。 默認選項是“動態”。 有了這個，您可以向任何方向移動對象。 還有其他幾種移動對象的方法。</p>
<p>如果選擇“距離”，則可以沿X-Y-Z方向按輸入的距離移動所選對象。</p>
<p> ➢單擊指定向量並選擇方向。</p>
<p>➢例如，在距離框中輸入5。 這會將圓柱體沿X軸平移5英寸的距離</p>
<p>➢點擊確定</p>
<h1>W17 2a</h1>
<p>Geometries</p>
<p>To define the ball, we used the Sphere node in two different contexts: for the graphical representation (children) and to define the physical bounds (boundingObject). All Geometry nodes (such as the Sphere node) can be used in a graphical context. However, only a subset of them can be used in a physical context. The nodes chart diagram indicates which nodes are supported in each context.</p>
<p>We are now going to reduce the size of the Sphere and increase its graphical quality by increasing the number of triangles used to represent it.</p>
<p>幾何形狀</p>
<p>為了定義球，我們在兩個不同的上下文中使用了Sphere節點：用於圖形表示（children）和定義物理邊界（boundingObject）。 所有Geometry節點（例如Sphere節點）都可以在圖形上下文中使用。 但是，它們的子集只能在物理環境中使用。 節點圖表顯示了每個上下文中支持哪些節點。</p>
<p> </p>
<p>現在，我們將通過增加用來表示球體三角形的數量來減小球體的大小並提高其圖形質量。</p>
<p> </p>
<p>Hands-on #5: For each Sphere node defining the ball, set its radius field to 0.05 and its subdivision field to 2. Refer to the Reference Manual to understand what the subdivision field stands for.</p>
<p> </p>
<p>動手操作5：對於定義球的每個Sphere節點，將其半徑字段設置為0.05，並將其細分字段設置為2。請參閱《參考手冊》以了解細分字段的含義。</p>
<p> </p>
<p>DEF-USE Mechanism</p>
<p>The DEF-USE mechanism allows to define a node in one place and to reuse that definition elsewhere in the scene tree. This is useful to avoid the duplication of identical nodes in world files. Moreover, it also allows users to modify several objects at the same time. Here is how it works: first a node is labeled with a DEF string. Then copies of this node can be reused elsewhere with the USE keyword. Only the fields of the DEF node can be edited, the fields of the USE inherit from the DEF node and cannot be changed. This mechanism is dependent on the order of the nodes in the world file. A DEF node should be defined before any corresponding USE node.</p>
<p>The two Sphere definitions that we have used earlier to define the ball, are redundant. We will now merge these two Spheres into only once using the DEF-USE mechanism.</p>
<p> </p>
<p>DEF-USE機制</p>
<p>DEF-USE機制允許在一個位置定義節點，並在場景樹的其他位置重用該定義。 這對於避免在世界文件中復制相同節點很有用。 此外，它還允許用戶同時修改多個對象。 它是這樣工作的：首先用DEF字符串標記節點。 然後，可以使用USE關鍵字將該節點的副本重用於其他地方。 只能編輯DEF節點的字段，USE的字段從DEF節點繼承，並且不能更改。 該機制取決於world文件中節點的順序。 應在任何相應的USE節點之前定義DEF節點。</p>
<p> </p>
<p>Hands-on #6: Select the first Sphere node (the child of the Shape) in the scene tree view. The field editor of the scene tree view allows you to enter the DEF string.</p>
<p> </p>
<p>Enter BALL_GEOMETRY in this field.</p>
<p>Select the boundingObject field (containing the second Sphere node), and empty it by right clicking the field in the scene tree and choosing the Delete entry in the context menu that pops up.</p>
<p>Then, select the boundingObject field and click on the Add button, and select the USE / BALL_GEOMETRY in the dialog box.</p>
<p>The result is shown in this figure.</p>
<p> </p>
<p>動手操作6：在場景樹視圖中選擇第一個Sphere節點（Shape的子級）。 場景樹視圖的字段編輯器允許您輸入DEF字符串。</p>
<p> </p>
<p>在此字段中輸入BALL_GEOMETRY。</p>
<p>選擇boundingObject字段（包含第二個Sphere節點），並通過右鍵單擊場景樹中的字段並在彈出的上下文菜單中選擇“刪除”條目來將其清空。</p>
<p>然後，選擇boundingObject字段，然後單擊“添加”按鈕，然後在對話框中選擇USE / BALL_GEOMETRY。</p>
<p>結果如圖所示。</p>
<p> Now, changing the radius field of the first Sphere node also modifies its boundingObject.</p>
<p> </p>
<p>For convenience, the boundingObject field accepts also the Shape node (rather than the Sphere node directly). It would be also possible to use the same DEF-USE mechanism at the Shape level as shown in this figure. For now the greatest benefit is being able to also use this Shape directly for graphical purposes. Later this mechanism will turn out to be very useful for some sensors.</p>
<p> </p>
<p>.現在，更改第一個Sphere節點的半徑字段也會修改其boundingObject。</p>
<p> </p>
<p>為了方便起見，boundingObject字段還接受Shape節點（而不是直接接受Sphere節點）。 如圖所示，也可以在Shape級別使用相同的DEF-USE機制。 到目前為止，最大的好處就是也可以直接將此Shape用於圖形目的。 後來，對於某些傳感器，該機制將變得非常有用。</p>
<p><img alt="" height="297" src="/images/2.jpg" width="523"/></p>
<p style="text-align: center;"> DEF-USE mechanism on the Sphere node called BALL_GEOMETRY</p>
<p style="text-align: center;">Sphere節點上的DEF-USE機制稱為BALL_GEOMETRY。</p>
<p> </p>
<p> <img alt="" height="330" src="/images/擷取.PNG" width="445"/></p>
<p style="text-align: center;"> DEF-USE mechanism applied on the Shape node of a Solid.</p>
<p style="text-align: center;">在實體的“形狀”節點上應用的DEF-USE機制。</p>
<p>Hands-on #7: Create a second ball with the same parameters but using the Shape node (rather than the Sphere node directly) for the DEF-USE mechanism.</p>
<p> </p>
<p>動手練習7：使用DEF-USE機制的Shape節點（而不是直接使用Sphere節點）創建具有相同參數的第二個球。</p>
<p> </p>
<p>Add Walls</p>
<p>In order to verify your progression, implement by yourself four walls to surround the environment. The walls have to be defined statically to the environment. To understand the difference between static and dynamic, let's take a defined object (the ball) above the ground. If the Physics node is NULL, it will remain frozen in the air during the simulation (static case). If the physics field contains a Physics nodes, it will fall under the effect of gravity (dynamic case).</p>
<p> </p>
<p>Use as much as possible the DEF-USE mechanism at the Shape level rather than at the Geometry level. Indeed it's more convenient to add an intermediate Shape node in the boundingObject field of the Solid node. The best Geometry primitive to implement the walls is the Box node. Only one Shape has to be defined for all the walls. The expected result is shown in this figure.</p>
<p> </p>
<p>添加牆</p>
<p>為了驗證您的進度，請自己實施四堵牆以包圍環境。 必須根據環境靜態定義牆壁。 要了解靜態和動態之間的區別，我們將定義的物體（球）放在地面上方。 如果“物理”節點為NULL，則在仿真過程中它將保持凍結狀態（靜態情況）。 如果物理場包含“物理”節點，則它將受重力作用（動態情況）。</p>
<p> </p>
<p>在Shape級別而不是Geometry級別，盡可能使用DEF-USE機制。 實際上，在Solid節點的boundingObject字段中添加中間Shape節點更為方便。 實現牆的最佳幾何原語是Box節點。 所有牆壁僅需定義一個形狀。 預期結果如圖所示。</p>
<p> </p>
<p>Hands-on #8: Add four walls without physics and using only one definition of the Shape node.</p>
<p> </p>
<p>實際操作＃8：添加四面牆，無需物理操作，僅使用“形狀”節點來定義。</p>
<p> </p>
<p>Solution: World File</p>
<p>To compare your world with the solution, go to your files and find the folder named "my_first_simulation" created in Tutorial 1, then go to the "worlds" folder and open with a text editor the right world. This solution as the others is located in the solution directory.</p>
<p> </p>
<p>解決方案：世界文件</p>
<p>要將您的world與解決方案進行比較，請轉到文件，找到在教程1中創建的名為“ my_first_simulation”的文件夾，然後轉到“ worlds”文件夾，並使用文本編輯器打開正確的world。 與其他解決方案一樣，該解決方案位於解決方案目錄中。</p>
<p><img alt="" height="295" src="/images/1.jpg" width="520"/></p>
<p style="text-align: center;"> The simulation state at the end of this second tutorial.</p>
<p style="text-align: center;">在第二篇教程結尾處的仿真狀態。</p>
<p> </p>
<p>Efficiency</p>
<p>The simulation of rigid bodies is computationally expensive. The simulation speed can be increased by minimizing the number of bounding objects, minimizing the constraints between them (more information about the constraints in the next tutorials), and maximizing the WorldInfo.basicTimeStep field. On each simulation, a trade-off has to be found between simulation speed and realism.</p>
<p> </p>
<p>效率</p>
<p>剛體的模擬在計算上是昂貴的。 可以通過以下方法來提高仿真速度：最小化邊界對象的數量，最小化邊界對象之間的約束（有關下一個教程的約束的更多信息），並最大化WorldInfo.basicTimeStep字段。 在每個模擬中，必須在模擬速度和真實性之間找到一個折衷。</p>
<p> </p>
<p>Conclusion</p>
<p>At the end of this tutorial, you are able to create simple environments based on rigid bodies. You are able to add nodes from the scene tree view and to modify their fields. You have become acquainted with the Solid, Physics, Shape, Sphere and Box nodes. You also saw the DEF-USE mechanism that allows to reduce node redundancy of the scene tree.</p>
<p> </p>
<p>結論</p>
<p>在本教程的最後，您將能夠基於剛體創建簡單的環境。 您可以從場景樹視圖添加節點並修改其字段。 您已經熟悉了“實體”，“物理”，“形狀”，“球體”和“盒子”節點。 您還看到了DEF-USE機制，該機制可減少場景樹的節點冗餘。</p>
<p></p>